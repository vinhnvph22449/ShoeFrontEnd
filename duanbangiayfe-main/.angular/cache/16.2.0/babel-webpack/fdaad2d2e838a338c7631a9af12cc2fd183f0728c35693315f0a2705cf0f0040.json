{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceListService {\n  constructor(htpp) {\n    this.htpp = htpp;\n    this.API = 'http://localhost:8080/color/view';\n  }\n  getList(id) {\n    console.log(id);\n    return this.htpp.get(this.API);\n  }\n}\n_class = ServiceListService;\n_class.ɵfac = function ServiceListService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ServiceListService","constructor","htpp","API","getList","id","console","log","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\xps\\Nodejs\\demo\\src\\app\\service\\service-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {SanPham} from \"../models/sanPham\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceListService {\n   private API ='http://localhost:8080/color/view';\n  constructor(private htpp: HttpClient) { }\n\n  getList(id?:string): Observable<SanPham[]>{\n    console.log(id);\n    return this.htpp.get<SanPham[]>(this.API);\n  }\n  \n  // createProduct(sanPham: SanPham):Observable<Object>{\n  //   return this.htpp.post(`${this.API}`,sanPham);\n  // }\n\n  // getProductByMa(ma?:number):Observable<SanPham>{\n  // return this.htpp.get<SanPham>(`${this.API}/details/${ma}`);\n  // }\n\n  // delete(ma?:number):Observable<any>{\n  //   console.log(ma);\n  //   return this.htpp.delete<any>(`${this.API}/delete/${ma}`);\n  // }\n\n  // getProductupdate(ma?:number, sanPham?: SanPham):Observable<Object>{\n  //   return this.htpp.put(`${this.API}/update/${ma}`,sanPham);\n  //   }\n  \n\n\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADf,KAAAC,GAAG,GAAE,kCAAkC;EACR;EAExCC,OAAOA,CAACC,EAAU;IAChBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACf,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAY,IAAI,CAACL,GAAG,CAAC;EAC3C;;SAPWH,kBAAkB;;mBAAlBA,MAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBZ,MAAkB;EAAAa,OAAA,EAAlBb,MAAkB,CAAAc,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}